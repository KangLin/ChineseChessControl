name: Doxygen

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_doxygen.outputs.name }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_doxygen:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE:  Release
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_ubuntu
      ChineseChessControl_VERSION: "v2.0.9"
      DOXYGEN_VERSION: 1.9.5
      artifact_name: build_doxygen

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: make_directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}
        cmake -E make_directory ${{github.workspace}}/build

    - name: Cache installed
      uses: actions/cache@v3
      id: cache-installed
      with:
        path: |
          ${{env.TOOSL_DIR}}
        key: cache-installed-doxygen

    - name: git clone RabbitCommon
      working-directory: ${{env.SOURCE_DIR}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: apt helper action
      uses: ryankurte/action-apt@v0.2.0
      with:
        # architectures to pass to dpkg --add-architecture
        #architectures: # optional
        # apt packages to install
        packages: xvfb xpra libglu1-mesa-dev libpulse-mainloop-glib0 cmake build-essential debhelper fakeroot graphviz doxygen qttools5-dev qttools5-dev-tools qtbase5-dev qtbase5-dev-tools qtmultimedia5-dev libqt5svg5-dev libqtermwidget5-0-dev qtwebengine5-dev
    
    - name: Download doxygen
      run: |
        if [ ! -d ${{env.TOOSL_DIR}}/doxygen-${{env.DOXYGEN_VERSION}} ]; then
            cd ${{env.TOOSL_DIR}}
            wget https://www.doxygen.nl/files/doxygen-${{env.DOXYGEN_VERSION}}.linux.bin.tar.gz
            tar xzf doxygen-${{env.DOXYGEN_VERSION}}.linux.bin.tar.gz
        fi
        sudo cp ${{env.TOOSL_DIR}}/doxygen-${{env.DOXYGEN_VERSION}}/bin/doxygen /usr/bin/doxygen

    - name: build doxygen
      working-directory: ${{github.workspace}}/build
      env:
        RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        BUILD_DOCS: ON
      run: |
        cmake ${{github.workspace}} \
            -DBUILD_APP:BOOL=OF \
            -DBUILD_CLIENT:BOOL=OFF \
            -DBUILD_PLUGINS:BOOL=OFF \
            -DBUILD_SERVICE:BOOL=OFF \
            -DBUILD_ABOUT:BOOL=OFF \
            -DBUILD_ADMINAUTHORISER:BOOL=OFF \
            -DBUILD_UPDATE:BOOL=OFF \
            -DCMARK_SHARED=OFF \
            -DCMARK_TESTS=OFF \
            -DCMARK_STATIC=ON \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install \
            -DBUILD_DOCS=ON
        cmake --build . --target doc
        7z a ChineseChessControl_${{env.ChineseChessControl_VERSION}}_document.zip Doxygen/*

    - name: Update artifact
#      if: ${{ matrix.BUILD_TYPE == 'Release' }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifact_name }}
        path: |
          ${{github.workspace}}/build/ChineseChessControl_${{env.ChineseChessControl_VERSION}}_document.zip

    - name: Deploy to GitHub Pages
      if: startsWith(github.ref, 'refs/tags/')
      uses: crazy-max/ghaction-github-pages@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        target_branch: gh-pages
        build_dir: build/Doxygen
