name: android

on: [push]

jobs:
  build_android:

    strategy:
      matrix:
        BUILD_TYPE: [Release]
        qt_arch: [android_armv7, android_x86_64]
        qt_version: [6.5.0]
        include:
          - BUILD_TYPE: Release
            qt_arch: android_armv7
            qt_version: 6.5.0

          - BUILD_TYPE: Release
            qt_version: 6.5.0
            qt_arch: android_x86_64

    runs-on: ubuntu-latest

    env:
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install
      ChineseChessControl_VERSION: "v2.0.7"
      VCPKGGITCOMMITID: 0ba60bfef5dea4cb2599daa7ad8364e309835a68
      ANDROID_PLATFORM: android-28
      qt_modules: 'qtimageformats qtlocation qtmultimedia qtpositioning qtscxml qtwebchannel qtwebsockets qtwebview qt5compat qtshadertools'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: make directory
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
          path: ${{env.TOOSL_DIR}}/qt
          key: android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}

      - name: Install Qt of gcc_64
        uses: jurplel/install-qt-action@v3
        with:
          dir: '${{env.TOOSL_DIR}}' # optional
          version: '${{matrix.qt_version}}'
          #host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          cached: '${{ steps.cache-qt.outputs.cache-hit }}' # optional, default is false

      - name: Install Qt of android
        # You may pin to the exact commit or the version.
        uses: jurplel/install-qt-action@v3
        with:
          # Directory to install Qt
          dir: '${{env.TOOSL_DIR}}' # optional
          # Version of Qt to install
          version: '${{matrix.qt_version}}'
          # Host platform
          #host: linux # optional
          # Target platform for build
          target: 'android' # optional, default is desktop
          # Architecture for Windows/Android
          arch: '${{matrix.qt_arch}}' # optional
          # Whether or not to install Qt dependencies on Linux
          #install-deps: true # optional, default is true
          # Additional Qt modules to install
          modules: '${{env.qt_modules}}' # optional. See: https://ddalcino.github.io/aqt-list-server/
          # Force a Qt mirror in case the default is not working
          #mirror: # optional
          # Whether or not to actually download Qt
          cached: '${{ steps.cache-qt.outputs.cache-hit }}' # optional, default is false
          # Whether or not to automatically run setup-python to find a valid python version.
          #setup-python: false # optional, default is true
          # Qt tools to download--specify comma-separated argument lists which are themselves separated by spaces: <tool_name>,<tool_version>,<tool_arch>
          #tools: # optional
          # Whether or not to actually install Qt or just the tools from the tools argument
          #tools-only: false # optional, default is false
          # Version of aqtinstall to use in case of issues
          #aqtversion: # optional, default is ==0.10.0
          # Version of py7zr to use in case of issues
          #py7zrversion: # optional, default is ==0.11.0
          # Any extra arguments to append to the back
          #extra: # optional

#    - name: run-vcpkg
#      uses: lukka/run-vcpkg@v7.4
#      with:
#        # Indicates whether to only setup vcpkg (i.e. installing it and setting the environment variables VCPKG_ROOT, RUNVCPK_VCPKG_ROOT), without installing any port.
#        #setupOnly: # optional
#        #vcpkgGitURL: https://github.com/KangLin/vcpkg.git
#        vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
#        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
#        # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
#        # compute its hash and append this to the computed cache's key.
#        appendedCacheKey: android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}-${{env.VCPKGGITCOMMITID}}
#        additionalCachedPaths: $VCPKG_ROOT/installed
#        vcpkgTriplet: '${{ matrix.VCPKG_TARGET_TRIPLET }}'
#        vcpkgArguments: 'zlib openssl'

      - name: Cache installed
        uses: actions/cache@v3
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: cache-installed-android-qt${{matrix.qt_version}}-${{matrix.VCPKG_TARGET_TRIPLET}}-${{matrix.BUILD_TYPE}}

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: build ChineseChessControl
        working-directory: ${{github.workspace}}/build
        env:
          QT_ROOT: ${{env.Qt5_Dir}}
          STOREPASS: ${{secrets.STOREPASS}}
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          sudo chmod 777 ${Qt6_DIR}/bin/qt-cmake
          ${Qt6_DIR}/bin/qt-cmake .. \
              -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
              -DQT_HOST_PATH=${Qt6_DIR}/../gcc_64
          cmake --build . --config ${{matrix.BUILD_TYPE}}

#      - name: update
#        if: ${{ matrix.BUILD_TYPE == 'Release' }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: RabbitCommon_Android_${{matrix.ANDROID_ABI}}_${{env.ChineseChessControl_VERSION}}
#          path: |
#            ${{env.INSTALL_DIR}}/RabbitCommon_${{matrix.ANDROID_ABI}}_${{env.ChineseChessControl_VERSION}}.apk

#      - name: Upload To Github Release
#        if: ${{matrix.ANDROID_ABI=='armeabi-v7a' && matrix.BUILD_TYPE == 'Release' && startsWith(github.ref, 'refs/tags/') }}
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          prerelease: true
#          body: |
#            [:cn: Change log](ChangeLog.md)
#          files: |
#            ${{env.INSTALL_DIR}}/RabbitCommon_${{matrix.ANDROID_ABI}}_${{env.ChineseChessControl_VERSION}}.apk
#            ${{env.INSTALL_DIR}}/RabbitCommon_${{matrix.ANDROID_ABI}}_${{env.ChineseChessControl_VERSION}}.apk.md5
#            ${{env.INSTALL_DIR}}/update_android.xml
