version: 'v2.0.11.{build}'

cache:
  - ..\other_source
# Clean cached
# https://www.appveyor.com/docs/build-cache/#cleaning-up-cache

environment:
  STOREPASS:
    secure: l9BZEU39F1a4vSkhwl0CHR+yh6CD1c7byGzMv+1NUa4=
  QT_USER:
    secure: EoBPaPuJ6u9UDYpQWjKhUg==
  QT_PASSWORD:
    secure: ejAYGgB+3sBispRxUSr0xw==
  ChineseChessControl_VERSION: "v2.0.11"
  
  matrix:
  ##### msvc 2015 ########
  - GENERATORS: "Visual Studio 14 2015"
    TOOLCHAIN_VERSION: 14
    QT_ROOT: C:\Qt\5.6\msvc2015
    BUILD_ARCH: x86
   
  - GENERATORS: "Visual Studio 14 2015 Win64"
    TOOLCHAIN_VERSION: 14
    QT_ROOT: C:\Qt\5.12\msvc2015_64
    BUILD_ARCH: x64

matrix:
  fast_finish: false

init:
  - set varch=%BUILD_ARCH%
  - if "%BUILD_ARCH%" == "x64" set varch=amd64
  - if "%BUILD_TARGERT%" == "windows_msvc" if %TOOLCHAIN_VERSION% LSS 15 (call "C:\Program Files (x86)\Microsoft Visual Studio %TOOLCHAIN_VERSION%.0\VC\vcvarsall.bat" %varch%) else (call "C:\Program Files (x86)\Microsoft Visual Studio\%MSVC%\Community\VC\Auxiliary\Build\vcvarsall.bat" %varch%)
  - echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
  - echo PROCESSOR_IDENTIFIER=%PROCESSOR_IDENTIFIER%
  - if NOT "%QT_ROOT%" == "NO" for /f "delims=" %%i in ('%QT_ROOT%/bin/qmake -query QT_VERSION') do (set QT_VERSION=%%i) 
  - echo QT_ROOT=%QT_ROOT%
  - echo QT_VERSION=%QT_VERSION%

install:
  - cd %APPVEYOR_BUILD_FOLDER%
  - git submodule update --init --recursive
  - git clone https://github.com/KangLin/RabbitCommon.git
  - set RabbitCommon_DIR=%APPVEYOR_BUILD_FOLDER%/RabbitCommon

  - set OTHER_SOURCE=%APPVEYOR_BUILD_FOLDER%\..\other_source
  - set INSTALL_DIR=%OTHER_SOURCE%\install_dir
  - if not exist "%OTHER_SOURCE%" ( mkdir "%OTHER_SOURCE%" )
  - if not exist "%INSTALL_DIR%" (mkdir "%INSTALL_DIR%")

  - cd %OTHER_SOURCE%
  - set CMAKE_VERSION=3.28.3
  - if not exist cmake-%CMAKE_VERSION%-windows-i386 (curl -fsSL -o cmake-%CMAKE_VERSION%-windows-i386.zip https://github.com/Kitware/CMake/releases/download/v%CMAKE_VERSION%/cmake-%CMAKE_VERSION%-windows-i386.zip && 7z x cmake-%CMAKE_VERSION%-windows-i386.zip)
  - cd cmake-%CMAKE_VERSION%-windows-i386
  - set PATH="%CD%/bin";%PATH%

  - cd %OTHER_SOURCE%
  - set VCPKG_DIR=%OTHER_SOURCE%\vcpkg
  - if not exist %VCPKG_DIR% (git clone "https://github.com/microsoft/vcpkg.git" && cd "%VCPKG_DIR%" && git checkout -b a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6 a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6 && bootstrap-vcpkg.bat)

before_build:

build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - mkdir build
  - cd build
  - cmake %APPVEYOR_BUILD_FOLDER% ^
      -G"%GENERATORS%" ^
      -DCMARK_SHARED=OFF ^
      -DCMARK_TESTS=OFF ^
      -DCMARK_STATIC=ON ^
      -DQT_DIR=%QT_ROOT%/lib/cmake/Qt5 ^
      -DQt5_DIR=%QT_ROOT%/lib/cmake/Qt5 ^
      -DINSTALL_QT=ON ^
      -DCMAKE_BUILD_TYPE=Release ^
      -DCMAKE_INSTALL_PREFIX="%cd%/install" ^
      -DCMAKE_PREFIX_PATH="%INSTALL_DIR%" ^
      -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake" ^
      -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON ^
      -DVCPKG_APPLOCAL_DEPS=ON
  - cmake --build . --config Release
  - cmake --build . --config Release --target package
  
artifacts:
  - path: build\chinesechesscontrol*.exe

test: off

#See: https://www.appveyor.com/docs/deployment/github/
deploy:
  - provider: GitHub
    #release: ChineseChessControl$(appveyor_build_version)
    #description: '中国象棋控件 变更详见[ChangeLog.md](ChangeLog.md)'
    #token: https://github.com/settings/tokens
    #password encrypt: https://ci.appveyor.com/tools/encrypt
    auth_token:
      secure: 43H2qtl+UKweMvnOUVCGuNkAElipdJJcCIzQcyE+Idb/Jo4Nm1fta2zsNwYiaQP/
    #draft: true
    #prerelease: true
    #force_update: true
    on:
      #TOOLCHAIN_VERSION: 14
      #QT_VERSION: 5.6.3
      BUILD_ARCH: x86
      appveyor_repo_tag: true        # deploy on tag push only
